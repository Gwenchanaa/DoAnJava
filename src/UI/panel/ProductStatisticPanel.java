/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.panel;

import Model.StatisticProduct;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ACER
 */
public class ProductStatisticPanel extends javax.swing.JPanel {

    /**
     * Creates new form ProductStatisticpanel
     */
    public ProductStatisticPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ScrollPane1 = new javax.swing.JScrollPane();
        Table1 = new javax.swing.JTable();
        sum = new java.awt.Label();
        sum1 = new java.awt.Label();

        Table1.setFont(new java.awt.Font("Serif", 0, 12)); // NOI18N
        Table1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã sản phẩm", "Sản phẩm", "Số lượng", "Thu nhập"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Table1.setGridColor(new java.awt.Color(51, 51, 51));
        Table1.setInheritsPopupMenu(true);
        Table1.setRowHeight(50);
        Table1.setSelectionBackground(new java.awt.Color(255, 255, 255));
        Table1.setShowGrid(true);
        ScrollPane1.setViewportView(Table1);

        sum.setText("Tổng thu nhập :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(sum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sum1, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(ScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(ScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sum1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

 public void loadStatisticProducts(ArrayList<StatisticProduct> list) {
        DefaultTableModel model = (DefaultTableModel) Table1.getModel();
        // Xóa tất cả các hàng trong model trước khi load dữ liệu mới
        model.setRowCount(0);

//        // Thêm dữ liệu từ ArrayList vào model
        for (StatisticProduct sp : list) {
            Object[] rowData = {sp.getProduct().getProductID(), sp.getProduct().getProductName(), sp.getQuanity(), sp.getIncome()};
            model.addRow(rowData);
        }
    }
 public void loadSum(ArrayList<StatisticProduct> list) {
       
        float S = 0;
        for (StatisticProduct sp : list) {
          S += sp.getIncome();
           
        }
        sum1.setText(String.format("%.2f vnd", S));
    }
 
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane ScrollPane1;
    private javax.swing.JTable Table1;
    private java.awt.Label sum;
    private java.awt.Label sum1;
    // End of variables declaration//GEN-END:variables
}
